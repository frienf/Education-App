{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/Education/Education-App/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/Education/Education-App/src/app/api/reading/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { supabase } from \"@/src/lib/supabase\";\r\nimport { Reading } from \"@/lib/types/reading\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from(\"readings\")\r\n      .select(\"*\")\r\n      .order(\"date\", { ascending: false });\r\n\r\n    if (error) {\r\n      console.error(\"Error fetching readings:\", error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json(data as Reading[]);\r\n  } catch (error) {\r\n    console.error(\"Error in GET /api/reading:\", error);\r\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json();\r\n    console.log(\"Received reading data:\", body);\r\n\r\n    const newReading = {\r\n      title: body.title,\r\n      author: body.author,\r\n      date: body.date || new Date().toISOString().split(\"T\")[0],\r\n      rating: Number(body.rating),\r\n    };\r\n\r\n    console.log(\"Processed reading data:\", newReading);\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"readings\")\r\n      .insert(newReading)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(\"Error inserting reading:\", error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n\r\n    console.log(\"Successfully inserted reading:\", data);\r\n    return NextResponse.json(data as Reading, { status: 201 });\r\n  } catch (error) {\r\n    console.error(\"Error in POST /api/reading:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Invalid request data\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const body = await request.json();\r\n    const { data, error } = await supabase\r\n      .from(\"readings\")\r\n      .update(body)\r\n      .eq(\"id\", body.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(\"Error updating reading:\", error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n    if (!data) {\r\n      return NextResponse.json(\r\n        { error: \"Reading entry not found\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    return NextResponse.json(data as Reading);\r\n  } catch (error) {\r\n    console.error(\"Error in PUT /api/reading:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Invalid request data\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function DELETE(request: Request) {\r\n  try {\r\n    const { id } = await request.json();\r\n    const { error } = await supabase.from(\"readings\").delete().eq(\"id\", id);\r\n\r\n    if (error) {\r\n      console.error(\"Error deleting reading:\", error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json({ message: \"Reading entry deleted\" });\r\n  } catch (error) {\r\n    console.error(\"Error in DELETE /api/reading:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Invalid request data\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;YAAE,WAAW;QAAM;QAEpC,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,MAAM,aAAa;YACjB,OAAO,KAAK,KAAK;YACjB,QAAQ,KAAK,MAAM;YACnB,MAAM,KAAK,IAAI,IAAI,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YACzD,QAAQ,OAAO,KAAK,MAAM;QAC5B;QAEA,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,YACP,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,QAAQ,GAAG,CAAC,kCAAkC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAiB;YAAE,QAAQ;QAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,MACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QACA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;QACjC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,YAAY,MAAM,GAAG,EAAE,CAAC,MAAM;QAEpE,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB;IAC9D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}